{"remainingRequest":"E:\\xampp\\htdocs\\testvue\\node_modules\\babel-loader\\lib\\index.js!E:\\xampp\\htdocs\\testvue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\xampp\\htdocs\\testvue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\xampp\\htdocs\\testvue\\src\\components\\GoogleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\xampp\\htdocs\\testvue\\src\\components\\GoogleMap.vue","mtime":1548080557288},{"path":"E:\\xampp\\htdocs\\testvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\xampp\\htdocs\\testvue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\xampp\\htdocs\\testvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\xampp\\htdocs\\testvue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"GoogleMap\",\n  data: function data() {\n    return {\n      center: {\n        lat: 41.006550,\n        lng: 29.130863\n      },\n      markers: [],\n      places: [],\n      currentPlace: null\n    };\n  },\n  mounted: function mounted() {\n    this.geolocate();\n  },\n  methods: {\n    // receives a place object via the autocomplete component\n    setPlace: function setPlace(place) {\n      this.currentPlace = place;\n    },\n    addMarker: function addMarker() {\n      if (this.currentPlace) {\n        var marker = {\n          lat: this.currentPlace.geometry.location.lat(),\n          lng: this.currentPlace.geometry.location.lng()\n        };\n        this.markers.push({\n          position: marker\n        });\n        this.places.push(this.currentPlace);\n        this.center = marker;\n        this.currentPlace = null;\n      }\n    },\n    geolocate: function geolocate() {\n      var _this = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this.center = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      });\n    }\n  }\n};",{"version":3,"sources":["GoogleMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AAAA,QAAA,GAAA,EAAA,SAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA,EAHA;AAIA,MAAA,YAAA,EAAA;AAJA,KAAA;AAMA,GATA;AAWA,EAAA,OAXA,qBAWA;AACA,SAAA,SAAA;AACA,GAbA;AAeA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA,oBAEA,KAFA,EAEA;AACA,WAAA,YAAA,GAAA,KAAA;AACA,KAJA;AAKA,IAAA,SALA,uBAKA;AACA,UAAA,KAAA,YAAA,EAAA;AACA,YAAA,MAAA,GAAA;AACA,UAAA,GAAA,EAAA,KAAA,YAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,EADA;AAEA,UAAA,GAAA,EAAA,KAAA,YAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA;AAFA,SAAA;AAIA,aAAA,OAAA,CAAA,IAAA,CAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,KAAA,YAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,YAAA,GAAA,IAAA;AACA;AACA,KAhBA;AAiBA,IAAA,SAAA,EAAA,qBAAA;AAAA;;AACA,MAAA,SAAA,CAAA,WAAA,CAAA,kBAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA;AACA,UAAA,GAAA,EAAA,QAAA,CAAA,MAAA,CAAA,QADA;AAEA,UAAA,GAAA,EAAA,QAAA,CAAA,MAAA,CAAA;AAFA,SAAA;AAIA,OALA;AAMA;AAxBA;AAfA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    \r\n    <br>\r\n    <gmap-map\r\n      :center=\"center\"\r\n      :zoom=\"12\"\r\n      style=\"width:100%;  height: 400px;\"\r\n    >\r\n      <gmap-marker\r\n        :key=\"index\"\r\n        v-for=\"(m, index) in markers\"\r\n        :position=\"m.position\"\r\n        @click=\"center=m.position\"\r\n      ></gmap-marker>\r\n    </gmap-map>\r\n    <br><br><br><br>\r\n  </div>\r\n  \r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"GoogleMap\",\r\n  data() {\r\n    return {\r\n      center: { lat: 41.006550, lng: 29.130863 },\r\n      markers: [],\r\n      places: [],\r\n      currentPlace: null\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.geolocate();\r\n  },\r\n\r\n  methods: {\r\n    // receives a place object via the autocomplete component\r\n    setPlace(place) {\r\n      this.currentPlace = place;\r\n    },\r\n    addMarker() {\r\n      if (this.currentPlace) {\r\n        const marker = {\r\n          lat: this.currentPlace.geometry.location.lat(),\r\n          lng: this.currentPlace.geometry.location.lng()\r\n        };\r\n        this.markers.push({ position: marker });\r\n        this.places.push(this.currentPlace);\r\n        this.center = marker;\r\n        this.currentPlace = null;\r\n      }\r\n    },\r\n    geolocate: function() {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        this.center = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        };\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src\\components"}]}